// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package bidding_service is a generated GoMock package.
package bidding_service

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBidding is a mock of Bidding interface
type MockBidding struct {
	ctrl     *gomock.Controller
	recorder *MockBiddingMockRecorder
}

// MockBiddingMockRecorder is the mock recorder for MockBidding
type MockBiddingMockRecorder struct {
	mock *MockBidding
}

// NewMockBidding creates a new mock instance
func NewMockBidding(ctrl *gomock.Controller) *MockBidding {
	mock := &MockBidding{ctrl: ctrl}
	mock.recorder = &MockBiddingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBidding) EXPECT() *MockBiddingMockRecorder {
	return m.recorder
}

// Bid mocks base method
func (m *MockBidding) Bid(ctx context.Context, request *BidRequest) (int, *BidResponse) {
	ret := m.ctrl.Call(m, "Bid", ctx, request)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(*BidResponse)
	return ret0, ret1
}

// Bid indicates an expected call of Bid
func (mr *MockBiddingMockRecorder) Bid(ctx, request interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Bid", reflect.TypeOf((*MockBidding)(nil).Bid), ctx, request)
}
